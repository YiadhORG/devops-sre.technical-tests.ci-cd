name: CI/CD Pipeline

on:
  push:
    branches:
      - main   # Trigger the pipeline when pushing to the main branch

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_REPOSITORY: yiadh

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: [frontend, backend, redis]  # List of images to build in parallel

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push ${{ matrix.image }} Image
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.image }}
          push: true
          tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}/${{ matrix.image }}:${{ github.sha }}

  test:
    runs-on: ubuntu-latest
    needs: build  # Make sure the build job is completed before running tests

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Create Docker network
        run: |
          docker network create shared_network

      - name: Run Docker Containers
        run: |
          docker run -d -p 6399:6399 --name redis --network shared_network -d ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}/redis:${{ github.sha }}
          docker run -d -p 3000:3000 --name frontend --network shared_network -d ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}/frontend:${{ github.sha }}
          docker run -d -p 4000:4000 --name backend --network shared_network -e REDIS_HOST="redis" -e "REDIS_PORT"="6399" -d ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_REPOSITORY }}/backend:${{ github.sha }}

      - name: Install testing tools
        run: |
          npm install mocha supertest --save-dev

      - name: Run Frontend Test
        run: |
          npx mocha frontend/test.js

      - name: Run Backend and Redis Test
        run: |
          npx mocha backend/test.js

      - name: Stop and Remove testing containers
        run: |
          docker stop frontend backend redis
          docker rm frontend backend redis
